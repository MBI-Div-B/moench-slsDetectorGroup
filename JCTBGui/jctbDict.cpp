//
// File generated by rootcint at Wed Nov 26 13:04:39 2014

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME jctbDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "jctbDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void jctbSignal_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_jctbSignal(void *p);
   static void deleteArray_jctbSignal(void *p);
   static void destruct_jctbSignal(void *p);
   static void streamer_jctbSignal(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::jctbSignal*)
   {
      ::jctbSignal *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::jctbSignal >(0);
      static ::ROOT::TGenericClassInfo 
         instance("jctbSignal", ::jctbSignal::Class_Version(), "./jctbSignal.h", 24,
                  typeid(::jctbSignal), DefineBehavior(ptr, ptr),
                  &::jctbSignal::Dictionary, isa_proxy, 0,
                  sizeof(::jctbSignal) );
      instance.SetDelete(&delete_jctbSignal);
      instance.SetDeleteArray(&deleteArray_jctbSignal);
      instance.SetDestructor(&destruct_jctbSignal);
      instance.SetStreamerFunc(&streamer_jctbSignal);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::jctbSignal*)
   {
      return GenerateInitInstanceLocal((::jctbSignal*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::jctbSignal*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void jctbSignals_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_jctbSignals(void *p);
   static void deleteArray_jctbSignals(void *p);
   static void destruct_jctbSignals(void *p);
   static void streamer_jctbSignals(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::jctbSignals*)
   {
      ::jctbSignals *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::jctbSignals >(0);
      static ::ROOT::TGenericClassInfo 
         instance("jctbSignals", ::jctbSignals::Class_Version(), "./jctbSignals.h", 20,
                  typeid(::jctbSignals), DefineBehavior(ptr, ptr),
                  &::jctbSignals::Dictionary, isa_proxy, 0,
                  sizeof(::jctbSignals) );
      instance.SetDelete(&delete_jctbSignals);
      instance.SetDeleteArray(&deleteArray_jctbSignals);
      instance.SetDestructor(&destruct_jctbSignals);
      instance.SetStreamerFunc(&streamer_jctbSignals);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::jctbSignals*)
   {
      return GenerateInitInstanceLocal((::jctbSignals*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::jctbSignals*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void jctbLoop_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_jctbLoop(void *p);
   static void deleteArray_jctbLoop(void *p);
   static void destruct_jctbLoop(void *p);
   static void streamer_jctbLoop(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::jctbLoop*)
   {
      ::jctbLoop *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::jctbLoop >(0);
      static ::ROOT::TGenericClassInfo 
         instance("jctbLoop", ::jctbLoop::Class_Version(), "./jctbPattern.h", 36,
                  typeid(::jctbLoop), DefineBehavior(ptr, ptr),
                  &::jctbLoop::Dictionary, isa_proxy, 0,
                  sizeof(::jctbLoop) );
      instance.SetDelete(&delete_jctbLoop);
      instance.SetDeleteArray(&deleteArray_jctbLoop);
      instance.SetDestructor(&destruct_jctbLoop);
      instance.SetStreamerFunc(&streamer_jctbLoop);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::jctbLoop*)
   {
      return GenerateInitInstanceLocal((::jctbLoop*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::jctbLoop*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void jctbWait_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_jctbWait(void *p);
   static void deleteArray_jctbWait(void *p);
   static void destruct_jctbWait(void *p);
   static void streamer_jctbWait(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::jctbWait*)
   {
      ::jctbWait *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::jctbWait >(0);
      static ::ROOT::TGenericClassInfo 
         instance("jctbWait", ::jctbWait::Class_Version(), "./jctbPattern.h", 58,
                  typeid(::jctbWait), DefineBehavior(ptr, ptr),
                  &::jctbWait::Dictionary, isa_proxy, 0,
                  sizeof(::jctbWait) );
      instance.SetDelete(&delete_jctbWait);
      instance.SetDeleteArray(&deleteArray_jctbWait);
      instance.SetDestructor(&destruct_jctbWait);
      instance.SetStreamerFunc(&streamer_jctbWait);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::jctbWait*)
   {
      return GenerateInitInstanceLocal((::jctbWait*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::jctbWait*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void jctbPattern_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_jctbPattern(void *p);
   static void deleteArray_jctbPattern(void *p);
   static void destruct_jctbPattern(void *p);
   static void streamer_jctbPattern(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::jctbPattern*)
   {
      ::jctbPattern *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::jctbPattern >(0);
      static ::ROOT::TGenericClassInfo 
         instance("jctbPattern", ::jctbPattern::Class_Version(), "./jctbPattern.h", 85,
                  typeid(::jctbPattern), DefineBehavior(ptr, ptr),
                  &::jctbPattern::Dictionary, isa_proxy, 0,
                  sizeof(::jctbPattern) );
      instance.SetDelete(&delete_jctbPattern);
      instance.SetDeleteArray(&deleteArray_jctbPattern);
      instance.SetDestructor(&destruct_jctbPattern);
      instance.SetStreamerFunc(&streamer_jctbPattern);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::jctbPattern*)
   {
      return GenerateInitInstanceLocal((::jctbPattern*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::jctbPattern*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void jctbDac_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_jctbDac(void *p);
   static void deleteArray_jctbDac(void *p);
   static void destruct_jctbDac(void *p);
   static void streamer_jctbDac(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::jctbDac*)
   {
      ::jctbDac *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::jctbDac >(0);
      static ::ROOT::TGenericClassInfo 
         instance("jctbDac", ::jctbDac::Class_Version(), "./jctbDac.h", 18,
                  typeid(::jctbDac), DefineBehavior(ptr, ptr),
                  &::jctbDac::Dictionary, isa_proxy, 0,
                  sizeof(::jctbDac) );
      instance.SetDelete(&delete_jctbDac);
      instance.SetDeleteArray(&deleteArray_jctbDac);
      instance.SetDestructor(&destruct_jctbDac);
      instance.SetStreamerFunc(&streamer_jctbDac);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::jctbDac*)
   {
      return GenerateInitInstanceLocal((::jctbDac*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::jctbDac*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void jctbDacs_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_jctbDacs(void *p);
   static void deleteArray_jctbDacs(void *p);
   static void destruct_jctbDacs(void *p);
   static void streamer_jctbDacs(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::jctbDacs*)
   {
      ::jctbDacs *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::jctbDacs >(0);
      static ::ROOT::TGenericClassInfo 
         instance("jctbDacs", ::jctbDacs::Class_Version(), "./jctbDacs.h", 19,
                  typeid(::jctbDacs), DefineBehavior(ptr, ptr),
                  &::jctbDacs::Dictionary, isa_proxy, 0,
                  sizeof(::jctbDacs) );
      instance.SetDelete(&delete_jctbDacs);
      instance.SetDeleteArray(&deleteArray_jctbDacs);
      instance.SetDestructor(&destruct_jctbDacs);
      instance.SetStreamerFunc(&streamer_jctbDacs);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::jctbDacs*)
   {
      return GenerateInitInstanceLocal((::jctbDacs*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::jctbDacs*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void jctbAdcs_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_jctbAdcs(void *p);
   static void deleteArray_jctbAdcs(void *p);
   static void destruct_jctbAdcs(void *p);
   static void streamer_jctbAdcs(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::jctbAdcs*)
   {
      ::jctbAdcs *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::jctbAdcs >(0);
      static ::ROOT::TGenericClassInfo 
         instance("jctbAdcs", ::jctbAdcs::Class_Version(), "./jctbAdcs.h", 65,
                  typeid(::jctbAdcs), DefineBehavior(ptr, ptr),
                  &::jctbAdcs::Dictionary, isa_proxy, 0,
                  sizeof(::jctbAdcs) );
      instance.SetDelete(&delete_jctbAdcs);
      instance.SetDeleteArray(&deleteArray_jctbAdcs);
      instance.SetDestructor(&destruct_jctbAdcs);
      instance.SetStreamerFunc(&streamer_jctbAdcs);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::jctbAdcs*)
   {
      return GenerateInitInstanceLocal((::jctbAdcs*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::jctbAdcs*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void jctbAcquisition_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_jctbAcquisition(void *p);
   static void deleteArray_jctbAcquisition(void *p);
   static void destruct_jctbAcquisition(void *p);
   static void streamer_jctbAcquisition(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::jctbAcquisition*)
   {
      ::jctbAcquisition *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::jctbAcquisition >(0);
      static ::ROOT::TGenericClassInfo 
         instance("jctbAcquisition", ::jctbAcquisition::Class_Version(), "./jctbAcquisition.h", 21,
                  typeid(::jctbAcquisition), DefineBehavior(ptr, ptr),
                  &::jctbAcquisition::Dictionary, isa_proxy, 0,
                  sizeof(::jctbAcquisition) );
      instance.SetDelete(&delete_jctbAcquisition);
      instance.SetDeleteArray(&deleteArray_jctbAcquisition);
      instance.SetDestructor(&destruct_jctbAcquisition);
      instance.SetStreamerFunc(&streamer_jctbAcquisition);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::jctbAcquisition*)
   {
      return GenerateInitInstanceLocal((::jctbAcquisition*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::jctbAcquisition*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void jctbMain_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_jctbMain(void *p);
   static void deleteArray_jctbMain(void *p);
   static void destruct_jctbMain(void *p);
   static void streamer_jctbMain(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::jctbMain*)
   {
      ::jctbMain *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::jctbMain >(0);
      static ::ROOT::TGenericClassInfo 
         instance("jctbMain", ::jctbMain::Class_Version(), "./jctbMain.h", 41,
                  typeid(::jctbMain), DefineBehavior(ptr, ptr),
                  &::jctbMain::Dictionary, isa_proxy, 0,
                  sizeof(::jctbMain) );
      instance.SetDelete(&delete_jctbMain);
      instance.SetDeleteArray(&deleteArray_jctbMain);
      instance.SetDestructor(&destruct_jctbMain);
      instance.SetStreamerFunc(&streamer_jctbMain);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::jctbMain*)
   {
      return GenerateInitInstanceLocal((::jctbMain*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::jctbMain*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void jctbAdc_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_jctbAdc(void *p);
   static void deleteArray_jctbAdc(void *p);
   static void destruct_jctbAdc(void *p);
   static void streamer_jctbAdc(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::jctbAdc*)
   {
      ::jctbAdc *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::jctbAdc >(0);
      static ::ROOT::TGenericClassInfo 
         instance("jctbAdc", ::jctbAdc::Class_Version(), "./jctbAdcs.h", 32,
                  typeid(::jctbAdc), DefineBehavior(ptr, ptr),
                  &::jctbAdc::Dictionary, isa_proxy, 0,
                  sizeof(::jctbAdc) );
      instance.SetDelete(&delete_jctbAdc);
      instance.SetDeleteArray(&deleteArray_jctbAdc);
      instance.SetDestructor(&destruct_jctbAdc);
      instance.SetStreamerFunc(&streamer_jctbAdc);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::jctbAdc*)
   {
      return GenerateInitInstanceLocal((::jctbAdc*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::jctbAdc*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *jctbSignal::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *jctbSignal::Class_Name()
{
   return "jctbSignal";
}

//______________________________________________________________________________
const char *jctbSignal::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::jctbSignal*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int jctbSignal::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::jctbSignal*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void jctbSignal::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::jctbSignal*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *jctbSignal::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::jctbSignal*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *jctbSignals::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *jctbSignals::Class_Name()
{
   return "jctbSignals";
}

//______________________________________________________________________________
const char *jctbSignals::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::jctbSignals*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int jctbSignals::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::jctbSignals*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void jctbSignals::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::jctbSignals*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *jctbSignals::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::jctbSignals*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *jctbLoop::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *jctbLoop::Class_Name()
{
   return "jctbLoop";
}

//______________________________________________________________________________
const char *jctbLoop::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::jctbLoop*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int jctbLoop::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::jctbLoop*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void jctbLoop::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::jctbLoop*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *jctbLoop::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::jctbLoop*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *jctbWait::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *jctbWait::Class_Name()
{
   return "jctbWait";
}

//______________________________________________________________________________
const char *jctbWait::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::jctbWait*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int jctbWait::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::jctbWait*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void jctbWait::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::jctbWait*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *jctbWait::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::jctbWait*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *jctbPattern::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *jctbPattern::Class_Name()
{
   return "jctbPattern";
}

//______________________________________________________________________________
const char *jctbPattern::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::jctbPattern*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int jctbPattern::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::jctbPattern*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void jctbPattern::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::jctbPattern*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *jctbPattern::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::jctbPattern*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *jctbDac::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *jctbDac::Class_Name()
{
   return "jctbDac";
}

//______________________________________________________________________________
const char *jctbDac::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::jctbDac*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int jctbDac::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::jctbDac*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void jctbDac::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::jctbDac*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *jctbDac::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::jctbDac*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *jctbDacs::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *jctbDacs::Class_Name()
{
   return "jctbDacs";
}

//______________________________________________________________________________
const char *jctbDacs::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::jctbDacs*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int jctbDacs::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::jctbDacs*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void jctbDacs::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::jctbDacs*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *jctbDacs::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::jctbDacs*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *jctbAdcs::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *jctbAdcs::Class_Name()
{
   return "jctbAdcs";
}

//______________________________________________________________________________
const char *jctbAdcs::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::jctbAdcs*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int jctbAdcs::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::jctbAdcs*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void jctbAdcs::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::jctbAdcs*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *jctbAdcs::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::jctbAdcs*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *jctbAcquisition::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *jctbAcquisition::Class_Name()
{
   return "jctbAcquisition";
}

//______________________________________________________________________________
const char *jctbAcquisition::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::jctbAcquisition*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int jctbAcquisition::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::jctbAcquisition*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void jctbAcquisition::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::jctbAcquisition*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *jctbAcquisition::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::jctbAcquisition*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *jctbMain::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *jctbMain::Class_Name()
{
   return "jctbMain";
}

//______________________________________________________________________________
const char *jctbMain::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::jctbMain*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int jctbMain::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::jctbMain*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void jctbMain::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::jctbMain*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *jctbMain::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::jctbMain*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *jctbAdc::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *jctbAdc::Class_Name()
{
   return "jctbAdc";
}

//______________________________________________________________________________
const char *jctbAdc::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::jctbAdc*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int jctbAdc::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::jctbAdc*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void jctbAdc::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::jctbAdc*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *jctbAdc::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::jctbAdc*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void jctbMain::Streamer(TBuffer &R__b)
{
   // Stream an object of class jctbMain.

   TGMainFrame::Streamer(R__b);
}

//______________________________________________________________________________
void jctbMain::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class jctbMain.
      TClass *R__cl = ::jctbMain::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*myDet", &myDet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEcanvas", &fEcanvas);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fModulecanvas", &fModulecanvas);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*br", &br);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mtab", &mtab);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*dacs", &dacs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*sig", &sig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*adcs", &adcs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pat", &pat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*acq", &acq);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMenuDock", &fMenuDock);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMenuBar", &fMenuBar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMenuFile", &fMenuFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMenuTest", &fMenuTest);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMenuView", &fMenuView);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMenuHelp", &fMenuHelp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCascadeMenu", &fCascadeMenu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCascade1Menu", &fCascade1Menu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCascade2Menu", &fCascade2Menu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMenuNew1", &fMenuNew1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMenuNew2", &fMenuNew2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMenuBarLayout", &fMenuBarLayout);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMenuBarItemLayout", &fMenuBarItemLayout);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMenuBarHelpLayout", &fMenuBarHelpLayout);
      TGMainFrame::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_jctbMain(void *p) {
      delete ((::jctbMain*)p);
   }
   static void deleteArray_jctbMain(void *p) {
      delete [] ((::jctbMain*)p);
   }
   static void destruct_jctbMain(void *p) {
      typedef ::jctbMain current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_jctbMain(TBuffer &buf, void *obj) {
      ((::jctbMain*)obj)->::jctbMain::Streamer(buf);
   }
} // end of namespace ROOT for class ::jctbMain

//______________________________________________________________________________
void jctbDacs::Streamer(TBuffer &R__b)
{
   // Stream an object of class jctbDacs.

   TGGroupFrame::Streamer(R__b);
}

//______________________________________________________________________________
void jctbDacs::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class jctbDacs.
      TClass *R__cl = ::jctbDacs::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*dacs[16]", &dacs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*myDet", &myDet);
      TGGroupFrame::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_jctbDacs(void *p) {
      delete ((::jctbDacs*)p);
   }
   static void deleteArray_jctbDacs(void *p) {
      delete [] ((::jctbDacs*)p);
   }
   static void destruct_jctbDacs(void *p) {
      typedef ::jctbDacs current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_jctbDacs(TBuffer &buf, void *obj) {
      ((::jctbDacs*)obj)->::jctbDacs::Streamer(buf);
   }
} // end of namespace ROOT for class ::jctbDacs

//______________________________________________________________________________
void jctbDac::Streamer(TBuffer &R__b)
{
   // Stream an object of class jctbDac.

   TGHorizontalFrame::Streamer(R__b);
}

//______________________________________________________________________________
void jctbDac::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class jctbDac.
      TClass *R__cl = ::jctbDac::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*dacsLabel", &dacsLabel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*dacsEntry", &dacsEntry);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*dacsUnit", &dacsUnit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*dacsValue", &dacsValue);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id", &id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*myDet", &myDet);
      TGHorizontalFrame::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_jctbDac(void *p) {
      delete ((::jctbDac*)p);
   }
   static void deleteArray_jctbDac(void *p) {
      delete [] ((::jctbDac*)p);
   }
   static void destruct_jctbDac(void *p) {
      typedef ::jctbDac current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_jctbDac(TBuffer &buf, void *obj) {
      ((::jctbDac*)obj)->::jctbDac::Streamer(buf);
   }
} // end of namespace ROOT for class ::jctbDac

//______________________________________________________________________________
void jctbSignals::Streamer(TBuffer &R__b)
{
   // Stream an object of class jctbSignals.

   TGGroupFrame::Streamer(R__b);
}

//______________________________________________________________________________
void jctbSignals::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class jctbSignals.
      TClass *R__cl = ::jctbSignals::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*signals[64]", &signals);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eIOCntrlRegister", &eIOCntrlRegister);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eClkCntrlRegister", &eClkCntrlRegister);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*myDet", &myDet);
      TGGroupFrame::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_jctbSignals(void *p) {
      delete ((::jctbSignals*)p);
   }
   static void deleteArray_jctbSignals(void *p) {
      delete [] ((::jctbSignals*)p);
   }
   static void destruct_jctbSignals(void *p) {
      typedef ::jctbSignals current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_jctbSignals(TBuffer &buf, void *obj) {
      ((::jctbSignals*)obj)->::jctbSignals::Streamer(buf);
   }
} // end of namespace ROOT for class ::jctbSignals

//______________________________________________________________________________
void jctbSignal::Streamer(TBuffer &R__b)
{
   // Stream an object of class jctbSignal.

   TGHorizontalFrame::Streamer(R__b);
}

//______________________________________________________________________________
void jctbSignal::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class jctbSignal.
      TClass *R__cl = ::jctbSignal::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*sLabel", &sLabel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*sOutput", &sOutput);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*sClock", &sClock);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*sPlot", &sPlot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*sValue", &sValue);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*sEntry", &sEntry);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fColorSel", &fColorSel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*myDet", &myDet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id", &id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hsig", &hsig);
      TGHorizontalFrame::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_jctbSignal(void *p) {
      delete ((::jctbSignal*)p);
   }
   static void deleteArray_jctbSignal(void *p) {
      delete [] ((::jctbSignal*)p);
   }
   static void destruct_jctbSignal(void *p) {
      typedef ::jctbSignal current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_jctbSignal(TBuffer &buf, void *obj) {
      ((::jctbSignal*)obj)->::jctbSignal::Streamer(buf);
   }
} // end of namespace ROOT for class ::jctbSignal

//______________________________________________________________________________
void jctbAdc::Streamer(TBuffer &R__b)
{
   // Stream an object of class jctbAdc.

   TGHorizontalFrame::Streamer(R__b);
}

//______________________________________________________________________________
void jctbAdc::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class jctbAdc.
      TClass *R__cl = ::jctbAdc::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*sAdcLabel", &sAdcLabel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*sAdcEnable", &sAdcEnable);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*sAdcPlot", &sAdcPlot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fColorSel", &fColorSel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*gADC", &gADC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id", &id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*myDet", &myDet);
      TGHorizontalFrame::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_jctbAdc(void *p) {
      delete ((::jctbAdc*)p);
   }
   static void deleteArray_jctbAdc(void *p) {
      delete [] ((::jctbAdc*)p);
   }
   static void destruct_jctbAdc(void *p) {
      typedef ::jctbAdc current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_jctbAdc(TBuffer &buf, void *obj) {
      ((::jctbAdc*)obj)->::jctbAdc::Streamer(buf);
   }
} // end of namespace ROOT for class ::jctbAdc

//______________________________________________________________________________
void jctbAdcs::Streamer(TBuffer &R__b)
{
   // Stream an object of class jctbAdcs.

   TGGroupFrame::Streamer(R__b);
}

//______________________________________________________________________________
void jctbAdcs::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class jctbAdcs.
      TClass *R__cl = ::jctbAdcs::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*sAdc[32]", &sAdc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*myDet", &myDet);
      TGGroupFrame::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_jctbAdcs(void *p) {
      delete ((::jctbAdcs*)p);
   }
   static void deleteArray_jctbAdcs(void *p) {
      delete [] ((::jctbAdcs*)p);
   }
   static void destruct_jctbAdcs(void *p) {
      typedef ::jctbAdcs current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_jctbAdcs(TBuffer &buf, void *obj) {
      ((::jctbAdcs*)obj)->::jctbAdcs::Streamer(buf);
   }
} // end of namespace ROOT for class ::jctbAdcs

//______________________________________________________________________________
void jctbLoop::Streamer(TBuffer &R__b)
{
   // Stream an object of class jctbLoop.

   TGHorizontalFrame::Streamer(R__b);
}

//______________________________________________________________________________
void jctbLoop::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class jctbLoop.
      TClass *R__cl = ::jctbLoop::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eLoopStartAddr", &eLoopStartAddr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eLoopStopAddr", &eLoopStopAddr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eLoopNumber", &eLoopNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id", &id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*myDet", &myDet);
      TGHorizontalFrame::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_jctbLoop(void *p) {
      delete ((::jctbLoop*)p);
   }
   static void deleteArray_jctbLoop(void *p) {
      delete [] ((::jctbLoop*)p);
   }
   static void destruct_jctbLoop(void *p) {
      typedef ::jctbLoop current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_jctbLoop(TBuffer &buf, void *obj) {
      ((::jctbLoop*)obj)->::jctbLoop::Streamer(buf);
   }
} // end of namespace ROOT for class ::jctbLoop

//______________________________________________________________________________
void jctbWait::Streamer(TBuffer &R__b)
{
   // Stream an object of class jctbWait.

   TGHorizontalFrame::Streamer(R__b);
}

//______________________________________________________________________________
void jctbWait::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class jctbWait.
      TClass *R__cl = ::jctbWait::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eWaitAddr", &eWaitAddr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eWaitTime", &eWaitTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id", &id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*myDet", &myDet);
      TGHorizontalFrame::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_jctbWait(void *p) {
      delete ((::jctbWait*)p);
   }
   static void deleteArray_jctbWait(void *p) {
      delete [] ((::jctbWait*)p);
   }
   static void destruct_jctbWait(void *p) {
      typedef ::jctbWait current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_jctbWait(TBuffer &buf, void *obj) {
      ((::jctbWait*)obj)->::jctbWait::Streamer(buf);
   }
} // end of namespace ROOT for class ::jctbWait

//______________________________________________________________________________
void jctbPattern::Streamer(TBuffer &R__b)
{
   // Stream an object of class jctbPattern.

   TGGroupFrame::Streamer(R__b);
}

//______________________________________________________________________________
void jctbPattern::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class jctbPattern.
      TClass *R__cl = ::jctbPattern::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eAdcClkFreq", &eAdcClkFreq);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eRunClkFreq", &eRunClkFreq);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eAdcClkPhase", &eAdcClkPhase);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eRunClkPhase", &eRunClkPhase);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eStartAddr", &eStartAddr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eStopAddr", &eStopAddr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eFrames", &eFrames);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ePeriod", &ePeriod);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eLoop[3]", &eLoop);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eWait[3]", &eWait);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pat[8192]", pat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*myDet", &myDet);
      TGGroupFrame::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_jctbPattern(void *p) {
      delete ((::jctbPattern*)p);
   }
   static void deleteArray_jctbPattern(void *p) {
      delete [] ((::jctbPattern*)p);
   }
   static void destruct_jctbPattern(void *p) {
      typedef ::jctbPattern current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_jctbPattern(TBuffer &buf, void *obj) {
      ((::jctbPattern*)obj)->::jctbPattern::Streamer(buf);
   }
} // end of namespace ROOT for class ::jctbPattern

//______________________________________________________________________________
void jctbAcquisition::Streamer(TBuffer &R__b)
{
   // Stream an object of class jctbAcquisition.

   TGGroupFrame::Streamer(R__b);
}

//______________________________________________________________________________
void jctbAcquisition::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class jctbAcquisition.
      TClass *R__cl = ::jctbAcquisition::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eOutdir", &eOutdir);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eFname", &eFname);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eFindex", &eFindex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*cFileSave", &cFileSave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*bStatus", &bStatus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*acqThread", &acqThread);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*myDet", &myDet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "StopFlag", &StopFlag);
      TGGroupFrame::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_jctbAcquisition(void *p) {
      delete ((::jctbAcquisition*)p);
   }
   static void deleteArray_jctbAcquisition(void *p) {
      delete [] ((::jctbAcquisition*)p);
   }
   static void destruct_jctbAcquisition(void *p) {
      typedef ::jctbAcquisition current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_jctbAcquisition(TBuffer &buf, void *obj) {
      ((::jctbAcquisition*)obj)->::jctbAcquisition::Streamer(buf);
   }
} // end of namespace ROOT for class ::jctbAcquisition

/********************************************************
* jctbDict.cpp
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtablejctbDict();

extern "C" void G__set_cpp_environmentjctbDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("jctbSignals.h");
  G__add_compiledheader("jctbSignal.h");
  G__add_compiledheader("jctbPattern.h");
  G__add_compiledheader("jctbDacs.h");
  G__add_compiledheader("jctbDac.h");
  G__add_compiledheader("jctbMain.h");
  G__add_compiledheader("jctbAdcs.h");
  G__add_compiledheader("jctbAcquisition.h");
  G__cpp_reset_tagtablejctbDict();
}
#include <new>
extern "C" int G__cpp_dllrevjctbDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* jctbSignal */
static int G__jctbDict_290_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   jctbSignal* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new jctbSignal(
(TGFrame*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (multiSlsDetector*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) jctbSignal(
(TGFrame*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (multiSlsDetector*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__jctbDictLN_jctbSignal));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_290_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((jctbSignal*) G__getstructoffset())->setSignalAlias((char*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_290_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((jctbSignal*) G__getstructoffset())->getSignalAlias();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_290_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((jctbSignal*) G__getstructoffset())->getPlot());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_290_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((jctbSignal*) G__getstructoffset())->setOutput((Long64_t) G__Longlong(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_290_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((jctbSignal*) G__getstructoffset())->setClock((Long64_t) G__Longlong(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_290_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((jctbSignal*) G__getstructoffset())->ToggledOutput((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_290_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((jctbSignal*) G__getstructoffset())->ToggledClock((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_290_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((jctbSignal*) G__getstructoffset())->ToggledPlot((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_290_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((jctbSignal*) G__getstructoffset())->isClock());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_290_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((jctbSignal*) G__getstructoffset())->isOutput());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_290_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((jctbSignal*) G__getstructoffset())->isPlot());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_290_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((jctbSignal*) G__getstructoffset())->ToggledSignalOutput((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_290_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((jctbSignal*) G__getstructoffset())->ToggledSignalClock((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_290_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((jctbSignal*) G__getstructoffset())->ToggledSignalPlot((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_290_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) jctbSignal::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_290_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) jctbSignal::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_290_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) jctbSignal::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_290_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      jctbSignal::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_290_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((jctbSignal*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_290_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) jctbSignal::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_290_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) jctbSignal::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_290_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) jctbSignal::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_290_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) jctbSignal::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef jctbSignal G__TjctbSignal;
static int G__jctbDict_290_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (jctbSignal*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((jctbSignal*) (soff+(sizeof(jctbSignal)*i)))->~G__TjctbSignal();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (jctbSignal*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((jctbSignal*) (soff))->~G__TjctbSignal();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* jctbSignals */
static int G__jctbDict_291_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   jctbSignals* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new jctbSignals((TGVerticalFrame*) G__int(libp->para[0]), (multiSlsDetector*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) jctbSignals((TGVerticalFrame*) G__int(libp->para[0]), (multiSlsDetector*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__jctbDictLN_jctbSignals));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_291_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((jctbSignals*) G__getstructoffset())->setSignalAlias(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_291_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((jctbSignals*) G__getstructoffset())->getSignalAlias();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_291_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((jctbSignals*) G__getstructoffset())->update();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_291_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((jctbSignals*) G__getstructoffset())->ToggledOutReg((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_291_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((jctbSignals*) G__getstructoffset())->ToggledClockReg((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_291_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((jctbSignals*) G__getstructoffset())->ToggledPlot((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_291_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) jctbSignals::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_291_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) jctbSignals::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_291_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) jctbSignals::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_291_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      jctbSignals::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_291_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((jctbSignals*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_291_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) jctbSignals::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_291_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) jctbSignals::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_291_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) jctbSignals::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_291_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) jctbSignals::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef jctbSignals G__TjctbSignals;
static int G__jctbDict_291_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (jctbSignals*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((jctbSignals*) (soff+(sizeof(jctbSignals)*i)))->~G__TjctbSignals();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (jctbSignals*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((jctbSignals*) (soff))->~G__TjctbSignals();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* jctbLoop */
static int G__jctbDict_305_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   jctbLoop* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new jctbLoop(
(TGGroupFrame*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (multiSlsDetector*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) jctbLoop(
(TGGroupFrame*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (multiSlsDetector*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__jctbDictLN_jctbLoop));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_305_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((jctbLoop*) G__getstructoffset())->setNLoops();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_305_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((jctbLoop*) G__getstructoffset())->update();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_305_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) jctbLoop::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_305_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) jctbLoop::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_305_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) jctbLoop::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_305_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      jctbLoop::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_305_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((jctbLoop*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_305_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) jctbLoop::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_305_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) jctbLoop::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_305_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) jctbLoop::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_305_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) jctbLoop::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef jctbLoop G__TjctbLoop;
static int G__jctbDict_305_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (jctbLoop*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((jctbLoop*) (soff+(sizeof(jctbLoop)*i)))->~G__TjctbLoop();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (jctbLoop*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((jctbLoop*) (soff))->~G__TjctbLoop();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* jctbWait */
static int G__jctbDict_306_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   jctbWait* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new jctbWait(
(TGGroupFrame*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (multiSlsDetector*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) jctbWait(
(TGGroupFrame*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (multiSlsDetector*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__jctbDictLN_jctbWait));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_306_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((jctbWait*) G__getstructoffset())->setWaitTime();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_306_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((jctbWait*) G__getstructoffset())->update();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_306_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) jctbWait::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_306_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) jctbWait::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_306_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) jctbWait::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_306_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      jctbWait::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_306_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((jctbWait*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_306_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) jctbWait::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_306_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) jctbWait::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_306_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) jctbWait::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_306_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) jctbWait::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef jctbWait G__TjctbWait;
static int G__jctbDict_306_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (jctbWait*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((jctbWait*) (soff+(sizeof(jctbWait)*i)))->~G__TjctbWait();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (jctbWait*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((jctbWait*) (soff))->~G__TjctbWait();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* jctbPattern */
static int G__jctbDict_307_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   jctbPattern* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new jctbPattern((TGVerticalFrame*) G__int(libp->para[0]), (multiSlsDetector*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) jctbPattern((TGVerticalFrame*) G__int(libp->para[0]), (multiSlsDetector*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__jctbDictLN_jctbPattern));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_307_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((jctbPattern*) G__getstructoffset())->update();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_307_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((jctbPattern*) G__getstructoffset())->setAdcFreq();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_307_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((jctbPattern*) G__getstructoffset())->setRunFreq();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_307_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((jctbPattern*) G__getstructoffset())->setAdcPhase();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_307_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((jctbPattern*) G__getstructoffset())->setRunPhase();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_307_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((jctbPattern*) G__getstructoffset())->setFrames();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_307_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((jctbPattern*) G__getstructoffset())->setPeriod();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_307_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) jctbPattern::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_307_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) jctbPattern::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_307_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) jctbPattern::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_307_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      jctbPattern::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_307_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((jctbPattern*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_307_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) jctbPattern::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_307_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) jctbPattern::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_307_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) jctbPattern::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_307_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) jctbPattern::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef jctbPattern G__TjctbPattern;
static int G__jctbDict_307_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (jctbPattern*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((jctbPattern*) (soff+(sizeof(jctbPattern)*i)))->~G__TjctbPattern();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (jctbPattern*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((jctbPattern*) (soff))->~G__TjctbPattern();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* jctbDac */
static int G__jctbDict_308_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   jctbDac* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new jctbDac(
(TGGroupFrame*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (multiSlsDetector*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) jctbDac(
(TGGroupFrame*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (multiSlsDetector*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__jctbDictLN_jctbDac));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_308_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((jctbDac*) G__getstructoffset())->setValue();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_308_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((jctbDac*) G__getstructoffset())->getValue());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_308_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((jctbDac*) G__getstructoffset())->setLabel((char*) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_308_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((jctbDac*) G__getstructoffset())->getLabel();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_308_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) jctbDac::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_308_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) jctbDac::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_308_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) jctbDac::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_308_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      jctbDac::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_308_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((jctbDac*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_308_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) jctbDac::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_308_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) jctbDac::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_308_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) jctbDac::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_308_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) jctbDac::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef jctbDac G__TjctbDac;
static int G__jctbDict_308_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (jctbDac*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((jctbDac*) (soff+(sizeof(jctbDac)*i)))->~G__TjctbDac();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (jctbDac*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((jctbDac*) (soff))->~G__TjctbDac();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* jctbDacs */
static int G__jctbDict_309_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   jctbDacs* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new jctbDacs((TGVerticalFrame*) G__int(libp->para[0]), (multiSlsDetector*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) jctbDacs((TGVerticalFrame*) G__int(libp->para[0]), (multiSlsDetector*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__jctbDictLN_jctbDacs));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_309_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((jctbDacs*) G__getstructoffset())->setDacAlias(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_309_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((jctbDacs*) G__getstructoffset())->getDacAlias();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_309_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((jctbDacs*) G__getstructoffset())->getDacParameters();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_309_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((jctbDacs*) G__getstructoffset())->update();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_309_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) jctbDacs::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_309_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) jctbDacs::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_309_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) jctbDacs::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_309_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      jctbDacs::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_309_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((jctbDacs*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_309_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) jctbDacs::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_309_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) jctbDacs::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_309_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) jctbDacs::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_309_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) jctbDacs::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef jctbDacs G__TjctbDacs;
static int G__jctbDict_309_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (jctbDacs*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((jctbDacs*) (soff+(sizeof(jctbDacs)*i)))->~G__TjctbDacs();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (jctbDacs*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((jctbDacs*) (soff))->~G__TjctbDacs();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* jctbAdcs */
static int G__jctbDict_313_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   jctbAdcs* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new jctbAdcs((TGVerticalFrame*) G__int(libp->para[0]), (multiSlsDetector*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) jctbAdcs((TGVerticalFrame*) G__int(libp->para[0]), (multiSlsDetector*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__jctbDictLN_jctbAdcs));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_313_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((jctbAdcs*) G__getstructoffset())->setAdcAlias(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_313_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((jctbAdcs*) G__getstructoffset())->getAdcAlias();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_313_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((jctbAdcs*) G__getstructoffset())->update();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_313_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) jctbAdcs::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_313_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) jctbAdcs::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_313_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) jctbAdcs::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_313_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      jctbAdcs::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_313_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((jctbAdcs*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_313_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) jctbAdcs::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_313_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) jctbAdcs::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_313_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) jctbAdcs::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_313_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) jctbAdcs::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef jctbAdcs G__TjctbAdcs;
static int G__jctbDict_313_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (jctbAdcs*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((jctbAdcs*) (soff+(sizeof(jctbAdcs)*i)))->~G__TjctbAdcs();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (jctbAdcs*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((jctbAdcs*) (soff))->~G__TjctbAdcs();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* jctbAcquisition */
static int G__jctbDict_314_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   jctbAcquisition* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new jctbAcquisition((TGVerticalFrame*) G__int(libp->para[0]), (multiSlsDetector*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) jctbAcquisition((TGVerticalFrame*) G__int(libp->para[0]), (multiSlsDetector*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__jctbDictLN_jctbAcquisition));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_314_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((jctbAcquisition*) G__getstructoffset())->setOutdir();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_314_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((jctbAcquisition*) G__getstructoffset())->setFname();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_314_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((jctbAcquisition*) G__getstructoffset())->setFsave((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_314_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((jctbAcquisition*) G__getstructoffset())->setFindex();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_314_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((jctbAcquisition*) G__getstructoffset())->toggleAcquisition();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_314_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 89, (long) jctbAcquisition::ThreadHandle((void*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_314_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((jctbAcquisition*) G__getstructoffset())->update();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_314_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((jctbAcquisition*) G__getstructoffset())->acquisitionFinished();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_314_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((jctbAcquisition*) G__getstructoffset())->startAcquisition();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_314_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) jctbAcquisition::progressCallback((double) G__double(libp->para[0]), (void*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_314_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) jctbAcquisition::dataCallback((detectorData*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (void*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_314_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) jctbAcquisition::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_314_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) jctbAcquisition::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_314_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) jctbAcquisition::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_314_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      jctbAcquisition::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_314_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((jctbAcquisition*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_314_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) jctbAcquisition::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_314_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) jctbAcquisition::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_314_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) jctbAcquisition::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_314_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) jctbAcquisition::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef jctbAcquisition G__TjctbAcquisition;
static int G__jctbDict_314_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (jctbAcquisition*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((jctbAcquisition*) (soff+(sizeof(jctbAcquisition)*i)))->~G__TjctbAcquisition();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (jctbAcquisition*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((jctbAcquisition*) (soff))->~G__TjctbAcquisition();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* jctbMain */
static int G__jctbDict_315_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   jctbMain* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new jctbMain((TGWindow*) G__int(libp->para[0]), (multiSlsDetector*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) jctbMain((TGWindow*) G__int(libp->para[0]), (multiSlsDetector*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__jctbDictLN_jctbMain));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_315_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((jctbMain*) G__getstructoffset())->loadAlias(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_315_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((jctbMain*) G__getstructoffset())->saveAlias(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_315_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((jctbMain*) G__getstructoffset())->loadParameters(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_315_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((jctbMain*) G__getstructoffset())->saveParameters(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_315_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((jctbMain*) G__getstructoffset())->loadConfiguration(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_315_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((jctbMain*) G__getstructoffset())->saveConfiguration(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_315_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((jctbMain*) G__getstructoffset())->tabSelected((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_315_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((jctbMain*) G__getstructoffset())->HandleMenu((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_315_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) jctbMain::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_315_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) jctbMain::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_315_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) jctbMain::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_315_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      jctbMain::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_315_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((jctbMain*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_315_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) jctbMain::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_315_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) jctbMain::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_315_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) jctbMain::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_315_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) jctbMain::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef jctbMain G__TjctbMain;
static int G__jctbDict_315_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (jctbMain*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((jctbMain*) (soff+(sizeof(jctbMain)*i)))->~G__TjctbMain();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (jctbMain*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((jctbMain*) (soff))->~G__TjctbMain();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* jctbAdc */
static int G__jctbDict_317_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   jctbAdc* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new jctbAdc(
(TGVerticalFrame*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (multiSlsDetector*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) jctbAdc(
(TGVerticalFrame*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (multiSlsDetector*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__jctbDictLN_jctbAdc));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_317_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((jctbAdc*) G__getstructoffset())->setAdcAlias((char*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_317_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((jctbAdc*) G__getstructoffset())->getAdcAlias();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_317_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((jctbAdc*) G__getstructoffset())->ToggledAdcPlot((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_317_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((jctbAdc*) G__getstructoffset())->ToggledPlot((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_317_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((jctbAdc*) G__getstructoffset())->update();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_317_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) jctbAdc::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_317_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) jctbAdc::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_317_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) jctbAdc::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_317_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      jctbAdc::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_317_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((jctbAdc*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_317_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) jctbAdc::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_317_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) jctbAdc::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_317_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) jctbAdc::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jctbDict_317_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) jctbAdc::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef jctbAdc G__TjctbAdc;
static int G__jctbDict_317_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (jctbAdc*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((jctbAdc*) (soff+(sizeof(jctbAdc)*i)))->~G__TjctbAdc();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (jctbAdc*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((jctbAdc*) (soff))->~G__TjctbAdc();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* jctbSignal */

/* jctbSignals */

/* jctbLoop */

/* jctbWait */

/* jctbPattern */

/* jctbDac */

/* jctbDacs */

/* jctbAdcs */

/* jctbAcquisition */

/* jctbMain */

/* jctbAdc */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncjctbDict {
 public:
  G__Sizep2memfuncjctbDict(): p(&G__Sizep2memfuncjctbDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncjctbDict::*p)();
};

size_t G__get_sizep2memfuncjctbDict()
{
  G__Sizep2memfuncjctbDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritancejctbDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__jctbDictLN_jctbSignal))) {
     jctbSignal *G__Lderived;
     G__Lderived=(jctbSignal*)0x1000;
     {
       TGHorizontalFrame *G__Lpbase=(TGHorizontalFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbSignal),G__get_linked_tagnum(&G__jctbDictLN_TGHorizontalFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbSignal),G__get_linked_tagnum(&G__jctbDictLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbSignal),G__get_linked_tagnum(&G__jctbDictLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbSignal),G__get_linked_tagnum(&G__jctbDictLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbSignal),G__get_linked_tagnum(&G__jctbDictLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbSignal),G__get_linked_tagnum(&G__jctbDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbSignal),G__get_linked_tagnum(&G__jctbDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__jctbDictLN_jctbSignals))) {
     jctbSignals *G__Lderived;
     G__Lderived=(jctbSignals*)0x1000;
     {
       TGGroupFrame *G__Lpbase=(TGGroupFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbSignals),G__get_linked_tagnum(&G__jctbDictLN_TGGroupFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbSignals),G__get_linked_tagnum(&G__jctbDictLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbSignals),G__get_linked_tagnum(&G__jctbDictLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbSignals),G__get_linked_tagnum(&G__jctbDictLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbSignals),G__get_linked_tagnum(&G__jctbDictLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbSignals),G__get_linked_tagnum(&G__jctbDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbSignals),G__get_linked_tagnum(&G__jctbDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__jctbDictLN_jctbLoop))) {
     jctbLoop *G__Lderived;
     G__Lderived=(jctbLoop*)0x1000;
     {
       TGHorizontalFrame *G__Lpbase=(TGHorizontalFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbLoop),G__get_linked_tagnum(&G__jctbDictLN_TGHorizontalFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbLoop),G__get_linked_tagnum(&G__jctbDictLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbLoop),G__get_linked_tagnum(&G__jctbDictLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbLoop),G__get_linked_tagnum(&G__jctbDictLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbLoop),G__get_linked_tagnum(&G__jctbDictLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbLoop),G__get_linked_tagnum(&G__jctbDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbLoop),G__get_linked_tagnum(&G__jctbDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__jctbDictLN_jctbWait))) {
     jctbWait *G__Lderived;
     G__Lderived=(jctbWait*)0x1000;
     {
       TGHorizontalFrame *G__Lpbase=(TGHorizontalFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbWait),G__get_linked_tagnum(&G__jctbDictLN_TGHorizontalFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbWait),G__get_linked_tagnum(&G__jctbDictLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbWait),G__get_linked_tagnum(&G__jctbDictLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbWait),G__get_linked_tagnum(&G__jctbDictLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbWait),G__get_linked_tagnum(&G__jctbDictLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbWait),G__get_linked_tagnum(&G__jctbDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbWait),G__get_linked_tagnum(&G__jctbDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__jctbDictLN_jctbPattern))) {
     jctbPattern *G__Lderived;
     G__Lderived=(jctbPattern*)0x1000;
     {
       TGGroupFrame *G__Lpbase=(TGGroupFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbPattern),G__get_linked_tagnum(&G__jctbDictLN_TGGroupFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbPattern),G__get_linked_tagnum(&G__jctbDictLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbPattern),G__get_linked_tagnum(&G__jctbDictLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbPattern),G__get_linked_tagnum(&G__jctbDictLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbPattern),G__get_linked_tagnum(&G__jctbDictLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbPattern),G__get_linked_tagnum(&G__jctbDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbPattern),G__get_linked_tagnum(&G__jctbDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__jctbDictLN_jctbDac))) {
     jctbDac *G__Lderived;
     G__Lderived=(jctbDac*)0x1000;
     {
       TGHorizontalFrame *G__Lpbase=(TGHorizontalFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbDac),G__get_linked_tagnum(&G__jctbDictLN_TGHorizontalFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbDac),G__get_linked_tagnum(&G__jctbDictLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbDac),G__get_linked_tagnum(&G__jctbDictLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbDac),G__get_linked_tagnum(&G__jctbDictLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbDac),G__get_linked_tagnum(&G__jctbDictLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbDac),G__get_linked_tagnum(&G__jctbDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbDac),G__get_linked_tagnum(&G__jctbDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__jctbDictLN_jctbDacs))) {
     jctbDacs *G__Lderived;
     G__Lderived=(jctbDacs*)0x1000;
     {
       TGGroupFrame *G__Lpbase=(TGGroupFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbDacs),G__get_linked_tagnum(&G__jctbDictLN_TGGroupFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbDacs),G__get_linked_tagnum(&G__jctbDictLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbDacs),G__get_linked_tagnum(&G__jctbDictLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbDacs),G__get_linked_tagnum(&G__jctbDictLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbDacs),G__get_linked_tagnum(&G__jctbDictLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbDacs),G__get_linked_tagnum(&G__jctbDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbDacs),G__get_linked_tagnum(&G__jctbDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__jctbDictLN_jctbAdcs))) {
     jctbAdcs *G__Lderived;
     G__Lderived=(jctbAdcs*)0x1000;
     {
       TGGroupFrame *G__Lpbase=(TGGroupFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbAdcs),G__get_linked_tagnum(&G__jctbDictLN_TGGroupFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbAdcs),G__get_linked_tagnum(&G__jctbDictLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbAdcs),G__get_linked_tagnum(&G__jctbDictLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbAdcs),G__get_linked_tagnum(&G__jctbDictLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbAdcs),G__get_linked_tagnum(&G__jctbDictLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbAdcs),G__get_linked_tagnum(&G__jctbDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbAdcs),G__get_linked_tagnum(&G__jctbDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__jctbDictLN_jctbAcquisition))) {
     jctbAcquisition *G__Lderived;
     G__Lderived=(jctbAcquisition*)0x1000;
     {
       TGGroupFrame *G__Lpbase=(TGGroupFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbAcquisition),G__get_linked_tagnum(&G__jctbDictLN_TGGroupFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbAcquisition),G__get_linked_tagnum(&G__jctbDictLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbAcquisition),G__get_linked_tagnum(&G__jctbDictLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbAcquisition),G__get_linked_tagnum(&G__jctbDictLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbAcquisition),G__get_linked_tagnum(&G__jctbDictLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbAcquisition),G__get_linked_tagnum(&G__jctbDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbAcquisition),G__get_linked_tagnum(&G__jctbDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__jctbDictLN_jctbMain))) {
     jctbMain *G__Lderived;
     G__Lderived=(jctbMain*)0x1000;
     {
       TGMainFrame *G__Lpbase=(TGMainFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbMain),G__get_linked_tagnum(&G__jctbDictLN_TGMainFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbMain),G__get_linked_tagnum(&G__jctbDictLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbMain),G__get_linked_tagnum(&G__jctbDictLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbMain),G__get_linked_tagnum(&G__jctbDictLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbMain),G__get_linked_tagnum(&G__jctbDictLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbMain),G__get_linked_tagnum(&G__jctbDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbMain),G__get_linked_tagnum(&G__jctbDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__jctbDictLN_jctbAdc))) {
     jctbAdc *G__Lderived;
     G__Lderived=(jctbAdc*)0x1000;
     {
       TGHorizontalFrame *G__Lpbase=(TGHorizontalFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbAdc),G__get_linked_tagnum(&G__jctbDictLN_TGHorizontalFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbAdc),G__get_linked_tagnum(&G__jctbDictLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbAdc),G__get_linked_tagnum(&G__jctbDictLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbAdc),G__get_linked_tagnum(&G__jctbDictLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbAdc),G__get_linked_tagnum(&G__jctbDictLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbAdc),G__get_linked_tagnum(&G__jctbDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbAdc),G__get_linked_tagnum(&G__jctbDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetablejctbDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Long64_t",110,-1,0,-1);
   G__setnewtype(-1,"Portable signed long integer 8 bytes",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__jctbDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__jctbDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__jctbDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__jctbDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__jctbDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__jctbDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__jctbDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__jctbDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__jctbDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__jctbDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__jctbDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__jctbDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__jctbDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__jctbDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* jctbSignal */
static void G__setup_memvarjctbSignal(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbSignal));
   { jctbSignal *p; p=(jctbSignal*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_TGLabel),-1,-1,4,"sLabel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_TGCheckButton),-1,-1,4,"sOutput=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_TGCheckButton),-1,-1,4,"sClock=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_TGCheckButton),-1,-1,4,"sPlot=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_TGLabel),-1,-1,4,"sValue=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_TGNumberEntry),-1,-1,4,"sEntry=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_TGColorSelect),-1,-1,4,"fColorSel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_multiSlsDetector),-1,-1,4,"myDet=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"id=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_TH1I),-1,-1,4,"hsig=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* jctbSignals */
static void G__setup_memvarjctbSignals(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbSignals));
   { jctbSignals *p; p=(jctbSignals*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_jctbSignal),-1,-1,4,"signals[64]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_TGNumberEntry),-1,-1,4,"eIOCntrlRegister=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_TGNumberEntry),-1,-1,4,"eClkCntrlRegister=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_multiSlsDetector),-1,-1,4,"myDet=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* jctbLoop */
static void G__setup_memvarjctbLoop(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbLoop));
   { jctbLoop *p; p=(jctbLoop*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_TGNumberEntry),-1,-1,4,"eLoopStartAddr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_TGNumberEntry),-1,-1,4,"eLoopStopAddr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_TGNumberEntry),-1,-1,4,"eLoopNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"id=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_multiSlsDetector),-1,-1,4,"myDet=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* jctbWait */
static void G__setup_memvarjctbWait(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbWait));
   { jctbWait *p; p=(jctbWait*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_TGNumberEntry),-1,-1,4,"eWaitAddr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_TGNumberEntry),-1,-1,4,"eWaitTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"id=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_multiSlsDetector),-1,-1,4,"myDet=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* jctbPattern */
static void G__setup_memvarjctbPattern(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbPattern));
   { jctbPattern *p; p=(jctbPattern*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_TGNumberEntry),-1,-1,4,"eAdcClkFreq=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_TGNumberEntry),-1,-1,4,"eRunClkFreq=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_TGNumberEntry),-1,-1,4,"eAdcClkPhase=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_TGNumberEntry),-1,-1,4,"eRunClkPhase=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_TGNumberEntry),-1,-1,4,"eStartAddr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_TGNumberEntry),-1,-1,4,"eStopAddr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_TGNumberEntry),-1,-1,4,"eFrames=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_TGNumberEntry),-1,-1,4,"ePeriod=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_jctbLoop),-1,-1,4,"eLoop[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_jctbWait),-1,-1,4,"eWait[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,99,0,0,-1,-1,-1,4,"pat[8192]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_multiSlsDetector),-1,-1,4,"myDet=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* jctbDac */
static void G__setup_memvarjctbDac(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbDac));
   { jctbDac *p; p=(jctbDac*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_TGLabel),-1,-1,4,"dacsLabel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_TGNumberEntry),-1,-1,4,"dacsEntry=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_TGCheckButton),-1,-1,4,"dacsUnit=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_TGLabel),-1,-1,4,"dacsValue=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"id=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_multiSlsDetector),-1,-1,4,"myDet=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* jctbDacs */
static void G__setup_memvarjctbDacs(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbDacs));
   { jctbDacs *p; p=(jctbDacs*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_jctbDac),-1,-1,4,"dacs[16]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_multiSlsDetector),-1,-1,4,"myDet=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* jctbAdcs */
static void G__setup_memvarjctbAdcs(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbAdcs));
   { jctbAdcs *p; p=(jctbAdcs*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_jctbAdc),-1,-1,4,"sAdc[32]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_multiSlsDetector),-1,-1,4,"myDet=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* jctbAcquisition */
static void G__setup_memvarjctbAcquisition(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbAcquisition));
   { jctbAcquisition *p; p=(jctbAcquisition*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_TGTextEntry),-1,-1,4,"eOutdir=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_TGTextEntry),-1,-1,4,"eFname=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_TGNumberEntry),-1,-1,4,"eFindex=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_TGCheckButton),-1,-1,4,"cFileSave=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_TGTextButton),-1,-1,4,"bStatus=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_TThread),-1,-1,4,"acqThread=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_multiSlsDetector),-1,-1,4,"myDet=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->StopFlag)-(long)(p)),105,0,0,-1,-1,-1,1,"StopFlag=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* jctbMain */
static void G__setup_memvarjctbMain(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbMain));
   { jctbMain *p; p=(jctbMain*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_multiSlsDetector),-1,-1,4,"myDet=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_TRootEmbeddedCanvas),-1,-1,4,"fEcanvas=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_TRootEmbeddedCanvas),-1,-1,4,"fModulecanvas=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_TGButtonGroup),-1,-1,4,"br=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_TGTab),-1,-1,4,"mtab=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_jctbDacs),-1,-1,4,"dacs=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_jctbSignals),-1,-1,4,"sig=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_jctbAdcs),-1,-1,4,"adcs=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_jctbPattern),-1,-1,4,"pat=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_jctbAcquisition),-1,-1,4,"acq=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_TGDockableFrame),-1,-1,4,"fMenuDock=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_TGMenuBar),-1,-1,4,"fMenuBar=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_TGPopupMenu),-1,-1,4,"fMenuFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_TGPopupMenu),-1,-1,4,"fMenuTest=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_TGPopupMenu),-1,-1,4,"fMenuView=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_TGPopupMenu),-1,-1,4,"fMenuHelp=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_TGPopupMenu),-1,-1,4,"fCascadeMenu=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_TGPopupMenu),-1,-1,4,"fCascade1Menu=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_TGPopupMenu),-1,-1,4,"fCascade2Menu=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_TGPopupMenu),-1,-1,4,"fMenuNew1=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_TGPopupMenu),-1,-1,4,"fMenuNew2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_TGLayoutHints),-1,-1,4,"fMenuBarLayout=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_TGLayoutHints),-1,-1,4,"fMenuBarItemLayout=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_TGLayoutHints),-1,-1,4,"fMenuBarHelpLayout=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* jctbAdc */
static void G__setup_memvarjctbAdc(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbAdc));
   { jctbAdc *p; p=(jctbAdc*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_TGLabel),-1,-1,4,"sAdcLabel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_TGCheckButton),-1,-1,4,"sAdcEnable=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_TGCheckButton),-1,-1,4,"sAdcPlot=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_TGColorSelect),-1,-1,4,"fColorSel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_TGraph),-1,-1,4,"gADC=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"id=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_multiSlsDetector),-1,-1,4,"myDet=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jctbDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarjctbDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncjctbSignal(void) {
   /* jctbSignal */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbSignal));
   G__memfunc_setup("jctbSignal",1025,G__jctbDict_290_0_1, 105, G__get_linked_tagnum(&G__jctbDictLN_jctbSignal), -1, 0, 3, 1, 1, 0, 
"U 'TGFrame' - 0 - page i - - 0 - i "
"U 'multiSlsDetector' - 0 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSignalAlias",1428,G__jctbDict_290_0_2, 105, -1, -1, 0, 3, 1, 1, 0, 
"C - - 0 - tit i - - 0 - plot "
"i - - 0 - col", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSignalAlias",1416,G__jctbDict_290_0_3, 117, G__get_linked_tagnum(&G__jctbDictLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPlot",735,G__jctbDict_290_0_4, 85, G__get_linked_tagnum(&G__jctbDictLN_TH1I), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setOutput",989,G__jctbDict_290_0_5, 105, -1, -1, 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setClock",824,G__jctbDict_290_0_6, 105, -1, -1, 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ToggledOutput",1367,G__jctbDict_290_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ToggledClock",1202,G__jctbDict_290_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ToggledPlot",1125,G__jctbDict_290_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isClock",712,G__jctbDict_290_0_10, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isOutput",877,G__jctbDict_290_0_11, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isPlot",635,G__jctbDict_290_0_12, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ToggledSignalOutput",1973,G__jctbDict_290_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - -", "*SIGNAL*", (void*) NULL, 0);
   G__memfunc_setup("ToggledSignalClock",1808,G__jctbDict_290_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - -", "*SIGNAL*", (void*) NULL, 0);
   G__memfunc_setup("ToggledSignalPlot",1731,G__jctbDict_290_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - -", "*SIGNAL*", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__jctbDict_290_0_16, 85, G__get_linked_tagnum(&G__jctbDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&jctbSignal::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__jctbDict_290_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&jctbSignal::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__jctbDict_290_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&jctbSignal::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__jctbDict_290_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&jctbSignal::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__jctbDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__jctbDict_290_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__jctbDict_290_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&jctbSignal::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__jctbDict_290_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&jctbSignal::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__jctbDict_290_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&jctbSignal::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__jctbDict_290_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&jctbSignal::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~jctbSignal", 1151, G__jctbDict_290_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncjctbSignals(void) {
   /* jctbSignals */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbSignals));
   G__memfunc_setup("jctbSignals",1140,G__jctbDict_291_0_1, 105, G__get_linked_tagnum(&G__jctbDictLN_jctbSignals), -1, 0, 2, 1, 1, 0, 
"U 'TGVerticalFrame' - 0 - page U 'multiSlsDetector' - 0 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSignalAlias",1428,G__jctbDict_291_0_2, 105, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - line", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSignalAlias",1416,G__jctbDict_291_0_3, 117, G__get_linked_tagnum(&G__jctbDictLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("update",643,G__jctbDict_291_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ToggledOutReg",1308,G__jctbDict_291_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ToggledClockReg",1488,G__jctbDict_291_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ToggledPlot",1125,G__jctbDict_291_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__jctbDict_291_0_8, 85, G__get_linked_tagnum(&G__jctbDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&jctbSignals::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__jctbDict_291_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&jctbSignals::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__jctbDict_291_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&jctbSignals::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__jctbDict_291_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&jctbSignals::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__jctbDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__jctbDict_291_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__jctbDict_291_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&jctbSignals::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__jctbDict_291_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&jctbSignals::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__jctbDict_291_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&jctbSignals::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__jctbDict_291_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&jctbSignals::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~jctbSignals", 1266, G__jctbDict_291_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncjctbLoop(void) {
   /* jctbLoop */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbLoop));
   G__memfunc_setup("jctbLoop",829,G__jctbDict_305_0_1, 105, G__get_linked_tagnum(&G__jctbDictLN_jctbLoop), -1, 0, 3, 1, 1, 0, 
"U 'TGGroupFrame' - 0 - page i - - 0 - i "
"U 'multiSlsDetector' - 0 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNLoops",935,G__jctbDict_305_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("update",643,G__jctbDict_305_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__jctbDict_305_0_4, 85, G__get_linked_tagnum(&G__jctbDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&jctbLoop::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__jctbDict_305_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&jctbLoop::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__jctbDict_305_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&jctbLoop::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__jctbDict_305_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&jctbLoop::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__jctbDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__jctbDict_305_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__jctbDict_305_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&jctbLoop::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__jctbDict_305_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&jctbLoop::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__jctbDict_305_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&jctbLoop::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__jctbDict_305_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&jctbLoop::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~jctbLoop", 955, G__jctbDict_305_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncjctbWait(void) {
   /* jctbWait */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbWait));
   G__memfunc_setup("jctbWait",824,G__jctbDict_306_0_1, 105, G__get_linked_tagnum(&G__jctbDictLN_jctbWait), -1, 0, 3, 1, 1, 0, 
"U 'TGGroupFrame' - 0 - page i - - 0 - i "
"U 'multiSlsDetector' - 0 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setWaitTime",1136,G__jctbDict_306_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("update",643,G__jctbDict_306_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__jctbDict_306_0_4, 85, G__get_linked_tagnum(&G__jctbDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&jctbWait::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__jctbDict_306_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&jctbWait::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__jctbDict_306_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&jctbWait::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__jctbDict_306_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&jctbWait::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__jctbDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__jctbDict_306_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__jctbDict_306_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&jctbWait::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__jctbDict_306_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&jctbWait::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__jctbDict_306_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&jctbWait::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__jctbDict_306_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&jctbWait::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~jctbWait", 950, G__jctbDict_306_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncjctbPattern(void) {
   /* jctbPattern */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbPattern));
   G__memfunc_setup("jctbPattern",1153,G__jctbDict_307_0_1, 105, G__get_linked_tagnum(&G__jctbDictLN_jctbPattern), -1, 0, 2, 1, 1, 0, 
"U 'TGVerticalFrame' - 0 - page U 'multiSlsDetector' - 0 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("update",643,G__jctbDict_307_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAdcFreq",994,G__jctbDict_307_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRunFreq",1039,G__jctbDict_307_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAdcPhase",1093,G__jctbDict_307_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRunPhase",1138,G__jctbDict_307_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFrames",938,G__jctbDict_307_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPeriod",943,G__jctbDict_307_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__jctbDict_307_0_9, 85, G__get_linked_tagnum(&G__jctbDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&jctbPattern::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__jctbDict_307_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&jctbPattern::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__jctbDict_307_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&jctbPattern::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__jctbDict_307_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&jctbPattern::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__jctbDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__jctbDict_307_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__jctbDict_307_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&jctbPattern::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__jctbDict_307_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&jctbPattern::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__jctbDict_307_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&jctbPattern::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__jctbDict_307_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&jctbPattern::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~jctbPattern", 1279, G__jctbDict_307_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncjctbDac(void) {
   /* jctbDac */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbDac));
   G__memfunc_setup("jctbDac",683,G__jctbDict_308_0_1, 105, G__get_linked_tagnum(&G__jctbDictLN_jctbDac), -1, 0, 3, 1, 1, 0, 
"U 'TGGroupFrame' - 0 - - i - - 0 - - "
"U 'multiSlsDetector' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setValue",841,G__jctbDict_308_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getValue",829,G__jctbDict_308_0_3, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setLabel",812,G__jctbDict_308_0_4, 105, -1, -1, 0, 2, 1, 1, 0, 
"C - - 0 - tit i - - 0 - mv", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getLabel",800,G__jctbDict_308_0_5, 117, G__get_linked_tagnum(&G__jctbDictLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__jctbDict_308_0_6, 85, G__get_linked_tagnum(&G__jctbDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&jctbDac::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__jctbDict_308_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&jctbDac::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__jctbDict_308_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&jctbDac::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__jctbDict_308_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&jctbDac::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__jctbDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__jctbDict_308_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__jctbDict_308_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&jctbDac::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__jctbDict_308_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&jctbDac::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__jctbDict_308_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&jctbDac::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__jctbDict_308_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&jctbDac::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~jctbDac", 809, G__jctbDict_308_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncjctbDacs(void) {
   /* jctbDacs */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbDacs));
   G__memfunc_setup("jctbDacs",798,G__jctbDict_309_0_1, 105, G__get_linked_tagnum(&G__jctbDictLN_jctbDacs), -1, 0, 2, 1, 1, 0, 
"U 'TGVerticalFrame' - 0 - page U 'multiSlsDetector' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDacAlias",1086,G__jctbDict_309_0_2, 105, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - line", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDacAlias",1074,G__jctbDict_309_0_3, 117, G__get_linked_tagnum(&G__jctbDictLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDacParameters",1628,G__jctbDict_309_0_4, 117, G__get_linked_tagnum(&G__jctbDictLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("update",643,G__jctbDict_309_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__jctbDict_309_0_6, 85, G__get_linked_tagnum(&G__jctbDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&jctbDacs::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__jctbDict_309_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&jctbDacs::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__jctbDict_309_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&jctbDacs::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__jctbDict_309_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&jctbDacs::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__jctbDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__jctbDict_309_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__jctbDict_309_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&jctbDacs::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__jctbDict_309_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&jctbDacs::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__jctbDict_309_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&jctbDacs::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__jctbDict_309_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&jctbDacs::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~jctbDacs", 924, G__jctbDict_309_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncjctbAdcs(void) {
   /* jctbAdcs */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbAdcs));
   G__memfunc_setup("jctbAdcs",798,G__jctbDict_313_0_1, 105, G__get_linked_tagnum(&G__jctbDictLN_jctbAdcs), -1, 0, 2, 1, 1, 0, 
"U 'TGVerticalFrame' - 0 - page U 'multiSlsDetector' - 0 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAdcAlias",1086,G__jctbDict_313_0_2, 105, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - line", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAdcAlias",1074,G__jctbDict_313_0_3, 117, G__get_linked_tagnum(&G__jctbDictLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("update",643,G__jctbDict_313_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__jctbDict_313_0_5, 85, G__get_linked_tagnum(&G__jctbDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&jctbAdcs::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__jctbDict_313_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&jctbAdcs::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__jctbDict_313_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&jctbAdcs::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__jctbDict_313_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&jctbAdcs::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__jctbDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__jctbDict_313_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__jctbDict_313_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&jctbAdcs::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__jctbDict_313_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&jctbAdcs::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__jctbDict_313_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&jctbAdcs::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__jctbDict_313_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&jctbAdcs::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~jctbAdcs", 924, G__jctbDict_313_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncjctbAcquisition(void) {
   /* jctbAcquisition */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbAcquisition));
   G__memfunc_setup("jctbAcquisition",1580,G__jctbDict_314_0_1, 105, G__get_linked_tagnum(&G__jctbDictLN_jctbAcquisition), -1, 0, 2, 1, 1, 0, 
"U 'TGVerticalFrame' - 0 - - U 'multiSlsDetector' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setOutdir",963,G__jctbDict_314_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFname",819,G__jctbDict_314_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFsave",833,G__jctbDict_314_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFindex",938,G__jctbDict_314_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("toggleAcquisition",1803,G__jctbDict_314_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ThreadHandle",1188,G__jctbDict_314_0_7, 89, -1, -1, 0, 1, 3, 1, 0, "Y - - 0 - arg", (char*)NULL, (void*) G__func2void( (void* (*)(void*))(&jctbAcquisition::ThreadHandle) ), 0);
   G__memfunc_setup("update",643,G__jctbDict_314_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("acquisitionFinished",2003,G__jctbDict_314_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("startAcquisition",1719,G__jctbDict_314_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("progressCallback",1666,G__jctbDict_314_0_11, 105, -1, -1, 0, 2, 3, 1, 0, 
"d - - 0 - - Y - - 0 - -", (char*)NULL, (void*) G__func2void( (int (*)(double, void*))(&jctbAcquisition::progressCallback) ), 0);
   G__memfunc_setup("dataCallback",1191,G__jctbDict_314_0_12, 105, -1, -1, 0, 3, 3, 1, 0, 
"U 'detectorData' - 0 - - i - - 0 - - "
"Y - - 0 - -", (char*)NULL, (void*) G__func2void( (int (*)(detectorData*, int, void*))(&jctbAcquisition::dataCallback) ), 0);
   G__memfunc_setup("Class",502,G__jctbDict_314_0_13, 85, G__get_linked_tagnum(&G__jctbDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&jctbAcquisition::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__jctbDict_314_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&jctbAcquisition::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__jctbDict_314_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&jctbAcquisition::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__jctbDict_314_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&jctbAcquisition::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__jctbDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__jctbDict_314_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__jctbDict_314_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&jctbAcquisition::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__jctbDict_314_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&jctbAcquisition::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__jctbDict_314_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&jctbAcquisition::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__jctbDict_314_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&jctbAcquisition::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~jctbAcquisition", 1706, G__jctbDict_314_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncjctbMain(void) {
   /* jctbMain */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbMain));
   G__memfunc_setup("jctbMain",808,G__jctbDict_315_0_1, 105, G__get_linked_tagnum(&G__jctbDictLN_jctbMain), -1, 0, 2, 1, 1, 0, 
"U 'TGWindow' - 10 - p U 'multiSlsDetector' - 0 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("loadAlias",906,G__jctbDict_315_0_2, 105, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - fname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("saveAlias",921,G__jctbDict_315_0_3, 105, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - fname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("loadParameters",1460,G__jctbDict_315_0_4, 105, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - fname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("saveParameters",1475,G__jctbDict_315_0_5, 105, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - fname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("loadConfiguration",1784,G__jctbDict_315_0_6, 105, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - fname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("saveConfiguration",1799,G__jctbDict_315_0_7, 105, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - fname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("tabSelected",1120,G__jctbDict_315_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CloseWindow",1134,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("HandleMenu",993,G__jctbDict_315_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__jctbDict_315_0_11, 85, G__get_linked_tagnum(&G__jctbDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&jctbMain::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__jctbDict_315_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&jctbMain::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__jctbDict_315_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&jctbMain::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__jctbDict_315_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&jctbMain::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__jctbDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__jctbDict_315_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__jctbDict_315_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&jctbMain::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__jctbDict_315_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&jctbMain::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__jctbDict_315_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&jctbMain::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__jctbDict_315_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&jctbMain::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~jctbMain", 934, G__jctbDict_315_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncjctbAdc(void) {
   /* jctbAdc */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__jctbDictLN_jctbAdc));
   G__memfunc_setup("jctbAdc",683,G__jctbDict_317_0_1, 105, G__get_linked_tagnum(&G__jctbDictLN_jctbAdc), -1, 0, 3, 1, 1, 0, 
"U 'TGVerticalFrame' - 0 - page i - - 0 - i "
"U 'multiSlsDetector' - 0 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAdcAlias",1086,G__jctbDict_317_0_2, 121, -1, -1, 0, 3, 1, 1, 0, 
"C - - 0 - tit i - - 0 - plot "
"i - - 0 - color", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAdcAlias",1074,G__jctbDict_317_0_3, 117, G__get_linked_tagnum(&G__jctbDictLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ToggledAdcPlot",1389,G__jctbDict_317_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ToggledPlot",1125,G__jctbDict_317_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("update",643,G__jctbDict_317_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__jctbDict_317_0_7, 85, G__get_linked_tagnum(&G__jctbDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&jctbAdc::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__jctbDict_317_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&jctbAdc::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__jctbDict_317_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&jctbAdc::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__jctbDict_317_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&jctbAdc::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__jctbDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__jctbDict_317_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__jctbDict_317_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&jctbAdc::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__jctbDict_317_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&jctbAdc::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__jctbDict_317_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&jctbAdc::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__jctbDict_317_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&jctbAdc::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~jctbAdc", 809, G__jctbDict_317_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncjctbDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globaljctbDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcjctbDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__jctbDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__jctbDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__jctbDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__jctbDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__jctbDictLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__jctbDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__jctbDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__jctbDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__jctbDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__jctbDictLN_TGObject = { "TGObject" , 99 , -1 };
G__linked_taginfo G__jctbDictLN_TQObject = { "TQObject" , 99 , -1 };
G__linked_taginfo G__jctbDictLN_TGWindow = { "TGWindow" , 99 , -1 };
G__linked_taginfo G__jctbDictLN_TGFrame = { "TGFrame" , 99 , -1 };
G__linked_taginfo G__jctbDictLN_TGCompositeFrame = { "TGCompositeFrame" , 99 , -1 };
G__linked_taginfo G__jctbDictLN_TGLayoutHints = { "TGLayoutHints" , 99 , -1 };
G__linked_taginfo G__jctbDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__jctbDictLN_TGTextButton = { "TGTextButton" , 99 , -1 };
G__linked_taginfo G__jctbDictLN_TGVerticalFrame = { "TGVerticalFrame" , 99 , -1 };
G__linked_taginfo G__jctbDictLN_TGHorizontalFrame = { "TGHorizontalFrame" , 99 , -1 };
G__linked_taginfo G__jctbDictLN_TGMainFrame = { "TGMainFrame" , 99 , -1 };
G__linked_taginfo G__jctbDictLN_TGGroupFrame = { "TGGroupFrame" , 99 , -1 };
G__linked_taginfo G__jctbDictLN_TGNumberEntry = { "TGNumberEntry" , 99 , -1 };
G__linked_taginfo G__jctbDictLN_multiSlsDetector = { "multiSlsDetector" , 99 , -1 };
G__linked_taginfo G__jctbDictLN_jctbSignal = { "jctbSignal" , 99 , -1 };
G__linked_taginfo G__jctbDictLN_jctbSignals = { "jctbSignals" , 99 , -1 };
G__linked_taginfo G__jctbDictLN_TGTextEntry = { "TGTextEntry" , 99 , -1 };
G__linked_taginfo G__jctbDictLN_TGLabel = { "TGLabel" , 99 , -1 };
G__linked_taginfo G__jctbDictLN_TGCheckButton = { "TGCheckButton" , 99 , -1 };
G__linked_taginfo G__jctbDictLN_TH1I = { "TH1I" , 99 , -1 };
G__linked_taginfo G__jctbDictLN_TGColorSelect = { "TGColorSelect" , 99 , -1 };
G__linked_taginfo G__jctbDictLN_TRootEmbeddedCanvas = { "TRootEmbeddedCanvas" , 99 , -1 };
G__linked_taginfo G__jctbDictLN_TGButtonGroup = { "TGButtonGroup" , 99 , -1 };
G__linked_taginfo G__jctbDictLN_TGTab = { "TGTab" , 99 , -1 };
G__linked_taginfo G__jctbDictLN_jctbLoop = { "jctbLoop" , 99 , -1 };
G__linked_taginfo G__jctbDictLN_jctbWait = { "jctbWait" , 99 , -1 };
G__linked_taginfo G__jctbDictLN_jctbPattern = { "jctbPattern" , 99 , -1 };
G__linked_taginfo G__jctbDictLN_jctbDac = { "jctbDac" , 99 , -1 };
G__linked_taginfo G__jctbDictLN_jctbDacs = { "jctbDacs" , 99 , -1 };
G__linked_taginfo G__jctbDictLN_TGMenuBar = { "TGMenuBar" , 99 , -1 };
G__linked_taginfo G__jctbDictLN_TGPopupMenu = { "TGPopupMenu" , 99 , -1 };
G__linked_taginfo G__jctbDictLN_TGDockableFrame = { "TGDockableFrame" , 99 , -1 };
G__linked_taginfo G__jctbDictLN_jctbAdcs = { "jctbAdcs" , 99 , -1 };
G__linked_taginfo G__jctbDictLN_jctbAcquisition = { "jctbAcquisition" , 99 , -1 };
G__linked_taginfo G__jctbDictLN_jctbMain = { "jctbMain" , 99 , -1 };
G__linked_taginfo G__jctbDictLN_TGraph = { "TGraph" , 99 , -1 };
G__linked_taginfo G__jctbDictLN_jctbAdc = { "jctbAdc" , 99 , -1 };
G__linked_taginfo G__jctbDictLN_TThread = { "TThread" , 99 , -1 };
G__linked_taginfo G__jctbDictLN_detectorData = { "detectorData" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtablejctbDict() {
  G__jctbDictLN_TClass.tagnum = -1 ;
  G__jctbDictLN_TBuffer.tagnum = -1 ;
  G__jctbDictLN_TMemberInspector.tagnum = -1 ;
  G__jctbDictLN_TObject.tagnum = -1 ;
  G__jctbDictLN_string.tagnum = -1 ;
  G__jctbDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__jctbDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__jctbDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__jctbDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__jctbDictLN_TGObject.tagnum = -1 ;
  G__jctbDictLN_TQObject.tagnum = -1 ;
  G__jctbDictLN_TGWindow.tagnum = -1 ;
  G__jctbDictLN_TGFrame.tagnum = -1 ;
  G__jctbDictLN_TGCompositeFrame.tagnum = -1 ;
  G__jctbDictLN_TGLayoutHints.tagnum = -1 ;
  G__jctbDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__jctbDictLN_TGTextButton.tagnum = -1 ;
  G__jctbDictLN_TGVerticalFrame.tagnum = -1 ;
  G__jctbDictLN_TGHorizontalFrame.tagnum = -1 ;
  G__jctbDictLN_TGMainFrame.tagnum = -1 ;
  G__jctbDictLN_TGGroupFrame.tagnum = -1 ;
  G__jctbDictLN_TGNumberEntry.tagnum = -1 ;
  G__jctbDictLN_multiSlsDetector.tagnum = -1 ;
  G__jctbDictLN_jctbSignal.tagnum = -1 ;
  G__jctbDictLN_jctbSignals.tagnum = -1 ;
  G__jctbDictLN_TGTextEntry.tagnum = -1 ;
  G__jctbDictLN_TGLabel.tagnum = -1 ;
  G__jctbDictLN_TGCheckButton.tagnum = -1 ;
  G__jctbDictLN_TH1I.tagnum = -1 ;
  G__jctbDictLN_TGColorSelect.tagnum = -1 ;
  G__jctbDictLN_TRootEmbeddedCanvas.tagnum = -1 ;
  G__jctbDictLN_TGButtonGroup.tagnum = -1 ;
  G__jctbDictLN_TGTab.tagnum = -1 ;
  G__jctbDictLN_jctbLoop.tagnum = -1 ;
  G__jctbDictLN_jctbWait.tagnum = -1 ;
  G__jctbDictLN_jctbPattern.tagnum = -1 ;
  G__jctbDictLN_jctbDac.tagnum = -1 ;
  G__jctbDictLN_jctbDacs.tagnum = -1 ;
  G__jctbDictLN_TGMenuBar.tagnum = -1 ;
  G__jctbDictLN_TGPopupMenu.tagnum = -1 ;
  G__jctbDictLN_TGDockableFrame.tagnum = -1 ;
  G__jctbDictLN_jctbAdcs.tagnum = -1 ;
  G__jctbDictLN_jctbAcquisition.tagnum = -1 ;
  G__jctbDictLN_jctbMain.tagnum = -1 ;
  G__jctbDictLN_TGraph.tagnum = -1 ;
  G__jctbDictLN_jctbAdc.tagnum = -1 ;
  G__jctbDictLN_TThread.tagnum = -1 ;
  G__jctbDictLN_detectorData.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtablejctbDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__jctbDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__jctbDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__jctbDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__jctbDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__jctbDictLN_string);
   G__get_linked_tagnum_fwd(&G__jctbDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__jctbDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__jctbDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__jctbDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__jctbDictLN_TGObject);
   G__get_linked_tagnum_fwd(&G__jctbDictLN_TQObject);
   G__get_linked_tagnum_fwd(&G__jctbDictLN_TGWindow);
   G__get_linked_tagnum_fwd(&G__jctbDictLN_TGFrame);
   G__get_linked_tagnum_fwd(&G__jctbDictLN_TGCompositeFrame);
   G__get_linked_tagnum_fwd(&G__jctbDictLN_TGLayoutHints);
   G__get_linked_tagnum_fwd(&G__jctbDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__jctbDictLN_TGTextButton);
   G__get_linked_tagnum_fwd(&G__jctbDictLN_TGVerticalFrame);
   G__get_linked_tagnum_fwd(&G__jctbDictLN_TGHorizontalFrame);
   G__get_linked_tagnum_fwd(&G__jctbDictLN_TGMainFrame);
   G__get_linked_tagnum_fwd(&G__jctbDictLN_TGGroupFrame);
   G__get_linked_tagnum_fwd(&G__jctbDictLN_TGNumberEntry);
   G__get_linked_tagnum_fwd(&G__jctbDictLN_multiSlsDetector);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__jctbDictLN_jctbSignal),sizeof(jctbSignal),-1,61440,(char*)NULL,G__setup_memvarjctbSignal,G__setup_memfuncjctbSignal);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__jctbDictLN_jctbSignals),sizeof(jctbSignals),-1,61440,(char*)NULL,G__setup_memvarjctbSignals,G__setup_memfuncjctbSignals);
   G__get_linked_tagnum_fwd(&G__jctbDictLN_TGTextEntry);
   G__get_linked_tagnum_fwd(&G__jctbDictLN_TGLabel);
   G__get_linked_tagnum_fwd(&G__jctbDictLN_TGCheckButton);
   G__get_linked_tagnum_fwd(&G__jctbDictLN_TH1I);
   G__get_linked_tagnum_fwd(&G__jctbDictLN_TGColorSelect);
   G__get_linked_tagnum_fwd(&G__jctbDictLN_TRootEmbeddedCanvas);
   G__get_linked_tagnum_fwd(&G__jctbDictLN_TGButtonGroup);
   G__get_linked_tagnum_fwd(&G__jctbDictLN_TGTab);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__jctbDictLN_jctbLoop),sizeof(jctbLoop),-1,61440,(char*)NULL,G__setup_memvarjctbLoop,G__setup_memfuncjctbLoop);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__jctbDictLN_jctbWait),sizeof(jctbWait),-1,61440,(char*)NULL,G__setup_memvarjctbWait,G__setup_memfuncjctbWait);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__jctbDictLN_jctbPattern),sizeof(jctbPattern),-1,61440,(char*)NULL,G__setup_memvarjctbPattern,G__setup_memfuncjctbPattern);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__jctbDictLN_jctbDac),sizeof(jctbDac),-1,61440,(char*)NULL,G__setup_memvarjctbDac,G__setup_memfuncjctbDac);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__jctbDictLN_jctbDacs),sizeof(jctbDacs),-1,61440,(char*)NULL,G__setup_memvarjctbDacs,G__setup_memfuncjctbDacs);
   G__get_linked_tagnum_fwd(&G__jctbDictLN_TGMenuBar);
   G__get_linked_tagnum_fwd(&G__jctbDictLN_TGPopupMenu);
   G__get_linked_tagnum_fwd(&G__jctbDictLN_TGDockableFrame);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__jctbDictLN_jctbAdcs),sizeof(jctbAdcs),-1,61440,(char*)NULL,G__setup_memvarjctbAdcs,G__setup_memfuncjctbAdcs);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__jctbDictLN_jctbAcquisition),sizeof(jctbAcquisition),-1,61440,(char*)NULL,G__setup_memvarjctbAcquisition,G__setup_memfuncjctbAcquisition);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__jctbDictLN_jctbMain),sizeof(jctbMain),-1,61440,(char*)NULL,G__setup_memvarjctbMain,G__setup_memfuncjctbMain);
   G__get_linked_tagnum_fwd(&G__jctbDictLN_TGraph);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__jctbDictLN_jctbAdc),sizeof(jctbAdc),-1,61440,(char*)NULL,G__setup_memvarjctbAdc,G__setup_memfuncjctbAdc);
   G__get_linked_tagnum_fwd(&G__jctbDictLN_TThread);
   G__get_linked_tagnum_fwd(&G__jctbDictLN_detectorData);
}
extern "C" void G__cpp_setupjctbDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupjctbDict()");
  G__set_cpp_environmentjctbDict();
  G__cpp_setup_tagtablejctbDict();

  G__cpp_setup_inheritancejctbDict();

  G__cpp_setup_typetablejctbDict();

  G__cpp_setup_memvarjctbDict();

  G__cpp_setup_memfuncjctbDict();
  G__cpp_setup_globaljctbDict();
  G__cpp_setup_funcjctbDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncjctbDict();
  return;
}
class G__cpp_setup_initjctbDict {
  public:
    G__cpp_setup_initjctbDict() { G__add_setup_func("jctbDict",(G__incsetup)(&G__cpp_setupjctbDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initjctbDict() { G__remove_setup_func("jctbDict"); }
};
G__cpp_setup_initjctbDict G__cpp_setup_initializerjctbDict;

